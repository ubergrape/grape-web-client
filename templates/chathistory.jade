.history
	.message-group.welcome-message
		h3.
			Welcome to #{room.name}
		p 
			=_('This is the beginning of a beautiful and exciting new conversation.')
		ul.welcome-tasks
			li.option
				a(href="#")
					i.fa.fa-user
					=_('Invite other members')
			li.option
				a(href='/services/list/', target='_blank')
					i.fa.fa-plus
					=_('Add service integrations')
	- var lastDate
	- var lastRead = true
	each lines in groupHistory(history)
		- var first = lines[0]
		if (!lastDate || lastDate.getDate() !== first.time.getDate() || lastDate.getTime() <= first.time.getTime() - 24 * 3600 * 1000)
			.date-separator= strftime('%A, %d.%m.%Y', first.time)
		if (lastRead && !first.read)
			.newmessage-separator: span= _('new messages')
		- var lastDate = first.time
		- var lastRead = first.read
		.message-group(key=first.id, data-id=lines[lines.length - 1].id, class=first.author.id !== user.id ? "" : "creator")
			a(href="/chat/@" + first.author.username.toLowerCase()).avatar
				img.image(src="#{first.author.avatar}",width="20",alt="#{first.author.username}")
			.message-content
				time.time(datetime=first.time.toISOString())= strftime('%H:%M Uhr', first.time)
				a(href="/chat/@" + first.author.username.toLowerCase()).author
					if (first.author.firstName || first.author.lastName)
						author.author #{first.author.firstName} #{first.author.lastName} 
							em #{first.author.username}
					else
						author= first.author.username
				each line in lines
					div.message(data-id=line.id, class=(line.author.type==='service' ? 'activity' : 'chat'))
						.labels(style='display: none;')
							a
								.label
									=_('#Label')
						time.time(datetime=line.time.toISOString())= strftime('%H:%M Uhr', line.time)
						i.fa.fa-tag.btn-label
						if line.actor && line.actor.image && line.actor.image.url
							a(href=line.actor.url, class="actor")
								img(src=line.actor.image.url, width=16, height=16, alt=line.actor.name)
						if line.container
							a.container(href=line.container.url, class=line.container.type)= line.container.name 
						if line.title
							.text= html(markdown(line.title))
						if line.text
							.text
								=html(markdown(line.text))
								//- uncomment this to test inline-labels
								//-a
								//-	span.label #entscheidungen
								//-		i.fa.fa-check-circle
						if line.container
							a.container(href=line.container.url, class=line.container.type)= line.container.name 
							if line.branch
								span.branch= line.branch
						if line.content
							.message-content= line.content
						if line.attachments
							//- process attachments/uploads
							each attachment in line.attachments
								if attachment.type.indexOf("image") == 0
									//- attachment is an image
									img.image.zoom-image(src=attachment.thumbnail_url, data-zoom-url=attachment.url, data-zoom-overlay="true", width=attachment.thumbnail_width, height=attachment.thumbnail_height, alt=attachment.name)
								else
									//- any other file
									a(href=attachment.url)= attachment.name
						if line.objects
							ul
								each obj in line.objects
									li(class=obj.type)
										if obj.sha
											a(href=obj.url)= obj.sha 
										if obj.name
											a(href=obj.url)= obj.name 
										if obj.content
											.content= obj.content
										if obj.summary
											.summary= obj.summary
										if obj.author && obj.author.username
											span.author= obj.author.username
						//- show the edit stuff only if current user is the author
						if user.id == line.author.id
							div.edit
								i.fa.fa-pencil.btn-edit
								i.fa.fa-times.btn-delete
